name: build

on:
  push:
    branches: ["trunk"]
    tags-ignore: ["**"]
  pull_request: {}
  workflow_dispatch: {}

jobs:
  build:
    name: "build"
    runs-on: ubuntu-latest

    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: set up Java version
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version-file: .github/workflows/.java-version

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Generate JNI headers
        run: ./gradlew :samples:simple:generateJniHeaders

      - name: Build
        run: ./gradlew build

  publish:
    name: "publish"
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/trunk' && github.repository == 'fletchmckee/ktjni' }}
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version-file: .github/workflows/.java-version

      - uses: gradle/actions/setup-gradle@v4

      - run: ./gradlew publish --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_IN_MEMORY_KEY }}
